/*******************************************************************************
 * Ech2o, a spatially-distributed, ecohydrologic simulator
 * Copyright (c) 2016 Marco Maneta <marco.maneta@umontana.edu>
 *
 *     This file is part of ech2o, a hydrologic model developed at the 
 *     University of Montana.
 *
 *     Ech2o is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     Ech2o is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with Ech2o.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Contributors:
 *    Marco Maneta
 *******************************************************************************/
/*
 * ReportVectCells.cpp
 *
 *  Created on: Feb 8, 2011
 *      Author: Marco.Maneta
 */

#include <fstream>
#include "Report.h"

int Report::ReportVectCells(const vectCells *input, string filename, float timestep){

	ofstream fout(filename.c_str(), ios::app);
	    if(!fout.is_open()) {cout << "Cannot create or open output file " << filename << "\n"; exit(EXIT_FAILURE);}

	  UINT4 length = input->cells.size();

	  fout.seekp(0,ios::end);
	  if (!fout.tellp()) { //if file is empty include the header and calculate the number of outlets
		fout << "#Output values file generated by ECH2O" << "\n";
		fout << length + 1 << "\n";
		fout << "ReportTime" << "\n";
		for (UINT4 i = 0; i < length; i++)
			fout << "Flow at row,col: " << input->cells[i].row << "," << input->cells[i].col << "\n";
	}

	  fout << timestep << "\t";
	  for (UINT4 i = 0; i< length; i++)
		  fout << input->cells[i].val << "\t";

	  fout << "\n";

	  if(fout.is_open())
	    fout.close();

	return EXIT_SUCCESS;
}
